"use strict";var passport=require("passport"),LocalStrategy=require("passport-local").Strategy,User=require("../models/user");passport.use(new LocalStrategy({usernameField:"email"},function(r,t,n){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.findOne({email:r}));case 2:if((s=e.sent)&&s.password==t){e.next=6;break}return console.log("Invalid username/password"),e.abrupt("return",n(null,!1));case 6:return e.abrupt("return",n(null,s));case 7:case"end":return e.stop()}})})),passport.serializeUser(function(e,r){r(null,e.id)}),passport.deserializeUser(function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.findById(r));case 2:if(n=e.sent){e.next=6;break}return console.log("Error in passport_local/deserializeUser"),e.abrupt("return",t(null,!1));case 6:return e.abrupt("return",t(null,n));case 7:case"end":return e.stop()}})}),passport.checkAuthentication=function(e,r,t){return e.isAuthenticated()?t():r.redirect("/users/sign-in")},passport.setAuthenticatedUser=function(e,r,t){e.isAuthenticated()&&(r.locals.user=e.user),t()},module.exports=passport;
//# sourceMappingURL=passport_local.min.js.map
